version: "3.8"
services:
  api:
    image: zhukovrost/pasteapi:1
    env_file: .env
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  email-sender:
    image: zhukovrost/pasteapi-email-sender:0.3
    restart: unless-stopped
    env_file: .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    env_file:
      - .env
    ports:
      - '5672:5672'
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 30s
      retries: 3
      timeout: 10s

  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: paste
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_EXTRA_OPTS: '-c listen_addresses=localhost -—Å ssl=off'
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/var/lib/cache
    restart: unless-stopped


  front:
    image: instead666/vue-cli-pasteapi-client:2.3
    restart: unless-stopped
    ports:
      - '8081:8081'
    depends_on:
      - api

  migrate:
    image: migrate/migrate
    env_file: .env
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/paste?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres:
  redis: